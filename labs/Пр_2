import numpy as np
import math as m
import pylab as p
from PyQt5.QtWidgets import (
QApplication,
QLabel,
QLineEdit,
QMainWindow,
QPushButton,
QVBoxLayout,
QWidget,
)
import matplotlib.pyplot as plt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
class MainWindow(QMainWindow):
    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent)

# Назначим заголовок окна
        self.setWindowTitle("График")

# Создание виджетов
        self.plot_button = QPushButton("Нарисовать график")
        self.plot_button.clicked.connect(self.plot_data)

# Создание полотна
        self.canvas = FigureCanvas(plt.figure())

# Создание центрального виджета
        central_widget = QWidget()
        layout = QVBoxLayout()

# макет, на который будут добавляться виджеты
# добавление макета на центральный виджет
        central_widget.setLayout(layout)

# Добавление виджетов на макет
        layout.addWidget(self.canvas)

# Установка центрального виджета
        self.setCentralWidget(central_widget)

        layout.addWidget(self.plot_button)

        self.range_label = QLabel("Диапазон:")
        self.range_start_input = QLineEdit('0')
        self.range_end_input = QLineEdit('1')

        layout.addWidget(self.range_label)
        layout.addWidget(self.range_start_input)
        layout.addWidget(self.range_end_input)

        self.function_label = QLabel("Функция:")
        self.function_input = QLineEdit('x**3')

        layout.addWidget(self.function_label)
        layout.addWidget(self.function_input)

        self.points_label = QLabel("Количество точек на грaфике")
        self.points_input = QLineEdit("50")

        layout.addWidget(self.points_label)
        layout.addWidget(self.points_input)

    def clear(self):
        self.clear(self.__init__())
        self.draw()
        layout.addWidget(self.clear())

    def plot_data(self):
        try:
            expression = self.function_input.text()
        except ValueError:
            expression = "x**3"

        try:
            range_start = float(self.range_start_input.text())
            range_end = float(self.range_end_input.text())
            points = int(self.points_input.text())
        except ValueError:
            range_start = 0
            range_end = 1
            points = 50

        x = np.linspace(range_start, range_end, points)

# определим словарь функций
        functions = {}
        exec(f"def f(x): return {expression}", functions)
        function = functions["f"]

        y = [function(value) for value in x]
        plt.plot(x, y)
        plt.grid(True)
        plt.xlabel('x')
        plt.ylabel('y')
        plt.title('Заголовок графика ' + expression)

        # Обновление виджета №0 (виджет с полотном Matplotlib)
        self.centralWidget().layout().itemAt(0).widget().draw()

# Создать приложение QApplication
app = QApplication([])

# Создать окно приложения
main_window = MainWindow()
main_window.show()

# Запустить приложение
app.exec_()
